plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-android-extensions"
    id "kotlin-kapt"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

android {
    Properties properties = new Properties()
    properties.load(project.file('../local.properties').newDataInputStream())

    signingConfigs {
        release {
            keyAlias properties.getProperty('keystore.keyAlias')
            storeFile file(properties.getProperty('keystore.storeFile'))
            storePassword properties.getProperty('keystore.storePassword')
            keyPassword properties.getProperty('keystore.keyPassword')
        }
    }

    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        applicationId "soy.gabimoreno.sharekittens"
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode project.ext.versionCode
        versionName project.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    bundle {
        density { enableSplit true }
        abi { enableSplit true }
        language { enableSplit false }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            splits.abi.enable = false
            splits.density.enable = false
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    testOptions {
        animationsDisabled true
    }

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
}

dependencies {
    implementation project(ModulesDependency.CORE)
    implementation project(ModulesDependency.CORE_RES)
    implementation project(ModulesDependency.CORE_DATA)
    implementation project(ModulesDependency.CORE_ANALYTICS)

    implementation project(ModulesDependency.LIB_FRAMEWORK)

    implementation KotlinDependency.COROUTINES

    implementation GoogleDependency.FIREBASE_ANALYTICS
    implementation GoogleDependency.FIREBASE_CRASHLYTICS

    implementation KoinDependency.KOIN_SCOPE
    implementation KoinDependency.KOIN_VIEW_MODEL

    implementation ArrowDependency.ARROW_CORE
    implementation ArrowDependency.ARROW_SYNTAX
    kapt ArrowDependency.ARROW_META
    implementation MiscellanyDependency.GIPHY

    implementation(AmplitudeDependency.AMPLITUDE)
    implementation(AmplitudeDependency.OK_HTTP)

    implementation MiscellanyDependency.GIPHY
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
}
